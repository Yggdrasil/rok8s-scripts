#!/bin/bash

. k8s-read-config

LINT_ERROR=0
CHECKMARK="\xE2\x9C\x93"
SKULL="\xE2\x98\xA0"

files_exist () {
    for FILE in "${@}"
    do
        if [[ -e "${FILE}" ]]
        then
            echo -e "${CHECKMARK} " "${FILE} exists"
        else
            echo -e "${SKULL} " "ERROR ${FILE} does not exist"
            LINT_ERROR=1
        fi
    done
}

check_deployments () {
    local FILE
    for FILE in "${@}"
    do
        check_deployment "${FILE}"
    done
}

check_deployment () {
    local FILE=$1

    # Check for revisionHistoryLimit
    grep 'revisionHistoryLimit' "${FILE}" > /dev/null
    RC=$?

    if [[ $RC -eq 0 ]]
    then
        echo -e "${CHECKMARK} " "${FILE} includes revisionHistoryLimit"
    else
        echo -e "${SKULL} " "ERROR ${FILE} does not include 'revisionHistoryLimit' https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy"
        LINT_ERROR=1
    fi
}

check_cronjobs () {
    local FILE
    for FILE in "${@}"
    do
      check_cronjob "${FILE}"
    done
}

check_cronjob () {
    local FILE=$1

    #check for JobsHistoryLimit - actually we want both
    #- failedJobsHistoryLimit + successfulJobsHistoryLimit, so grep for LCD
    grep 'JobsHistoryLimit' "${FILE}" > /dev/null
    RC=$?

    if [[ $RC -eq 0 ]]
    then
      echo -e "${CHECKMARK} " "${FILE} includes JobsHistoryLimit"
    else
      echo -e "${SKULL} " "ERROR ${FILE} does not include 'JobsHistoryLimit' https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#jobs-history-limits"
        LINT_ERROR=1
    fi
}



main() {
    echo "Linting files"
    files_exist "${CONFIGMAP_FILES[@]}"
    files_exist "${PERSISTENT_VOLUME_FILES[@]}"
    files_exist "${PERSISTENT_VOLUME_CLAIM_FILES[@]}"
    files_exist "${STATEFULSET_FILES[@]}"
    files_exist "${SERVICE_FILES[@]}"
    files_exist "${ENDPOINT_FILES[@]}"
    files_exist "${INGRESS_FILES[@]}"
    files_exist "${BLOCKING_JOBS_FILES[@]}"
    files_exist "${JOBS_FILES[@]}"
    files_exist "${CRONJOB_FILES[@]}"
    files_exist "${DEPLOYMENT_FILES[@]}"
    files_exist "${HORIZONTAL_POD_AUTOSCALER_FILES[@]}"
    files_exist "${POD_DISRUPTION_BUDGET_FILES[@]}"

    check_deployments "${DEPLOYMENT_FILES[@]}"
    check_cronjobs "${CRONJOB_FILES[@]}"

    echo "Exit: ${LINT_ERROR}"
    exit $LINT_ERROR
}

main
